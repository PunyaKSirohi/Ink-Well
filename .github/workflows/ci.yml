name: Django CI/CD

on:
  push:
    branches: [ main, develop, phase-5 ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_inkwell
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov pytest-django
    
    - name: Set up environment variables
      run: |
        echo "SECRET_KEY=test-secret-key-for-ci" >> $GITHUB_ENV
        echo "DEBUG=True" >> $GITHUB_ENV
        echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/test_inkwell" >> $GITHUB_ENV
    
    - name: Run migrations
      run: |
        python manage.py migrate
      env:
        SECRET_KEY: test-secret-key-for-ci
        DEBUG: True
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_inkwell
    
    - name: Run tests with coverage
      run: |
        pytest --cov=blog --cov=inkwell --cov-report=xml --cov-report=html
      env:
        SECRET_KEY: test-secret-key-for-ci
        DEBUG: True
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_inkwell
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
    
    - name: Run security checks
      run: |
        pip install bandit safety
        bandit -r blog/ inkwell/ -f json -o bandit-report.json || true
        safety check --json --output safety-report.json || true
    
    - name: Run linting
      run: |
        pip install flake8 black isort
        flake8 blog/ inkwell/
        black --check blog/ inkwell/
        isort --check-only blog/ inkwell/

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t inkwell:latest .
    
    - name: Test Docker image
      run: |
        docker run --rm inkwell:latest python manage.py check
